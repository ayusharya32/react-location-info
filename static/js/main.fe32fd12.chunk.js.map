{"version":3,"sources":["components/Header.js","components/Loader.js","components/Message.js","components/NewsCard.js","components/SectionNews.js","components/SectionSearch.js","components/SectionWeather.js","App.js","index.js"],"names":["Header","className","Loader","Message","showMessage","NewsCard","article","title","description","url","urlToImage","onClick","window","open","src","alt","length","slice","SectionNews","searchLocation","useState","articles","setArticles","useEffect","axios","get","params","q","pageSize","apiKey","process","then","res","data","catch","err","console","log","map","SectionSearch","submitQuery","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","SectionWeather","weatherInfo","iconUrl","weather","icon","main","temp","feels_like","pressure","humidity","tempFromKelvinToCelcius","toFixed","moment","format","name","wind","speed","App","setWeatherInfo","searchQuery","setSearchQuery","newsSearchQuery","setNewsSearchQuery","setShowMessage","loading","setLoading","appid","response","status","setTimeout","_","isEmpty","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe32fd12.chunk.js","sourcesContent":["import LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <nav>\r\n            <div className=\"nav-center\">\r\n                <LocationCityIcon className=\"logo-icon\"/>\r\n                <h1>Location Info App</h1>\r\n            </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Loader() {\r\n    return (\r\n        <div className=\"loader-container\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","function Message({ showMessage}) {\r\n    return (\r\n        <div className={showMessage ? \"message show-message\" : \"message\"}>\r\n            <h2>Invalid City Name</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","function NewsCard({ article }) {\r\n    const {title, description, url, urlToImage} = article\r\n\r\n    function onArticleClicked() {\r\n        window.open(url, '_blank')\r\n    }\r\n\r\n    return (\r\n        <div onClick={onArticleClicked} className=\"card\">\r\n            <img src={urlToImage} alt=\"news\" />\r\n            <div className=\"card-content\">\r\n                <h1 className=\"title\">{title}</h1>\r\n                <p className=\"description\">\r\n                    {description.length > 20 ? `${description.slice(0, 149)}...` : description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsCard\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport NewsCard from './NewsCard';\r\n\r\nfunction SectionNews({ searchLocation }) {\r\n\r\n    const [articles, setArticles] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://newsapi.org/v2/everything\", {\r\n          params: {\r\n            q: searchLocation,\r\n            pageSize: 9,\r\n            apiKey: process.env.REACT_APP_NEWS_API_KEY\r\n          }\r\n        }).then(res => {\r\n          setArticles(res.data.articles)\r\n        })\r\n        .catch(err => console.log(err))\r\n      }, [searchLocation])\r\n\r\n    return (\r\n        <section className=\"section-news\">\r\n            <div className=\"container\">\r\n                { articles.map(article => <NewsCard key={article.url} article={article}/>) }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SectionNews\r\n","import { useState } from \"react\"\r\n\r\nfunction SectionSearch({ submitQuery }) {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        submitQuery(text)\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <section className=\"section-search\">\r\n            <form onSubmit={onSubmit}>\r\n                <input onChange={(e) => setText(e.target.value)} value={text} type=\"text\" placeholder=\"Search Location...\" />\r\n                <button type=\"submit\" className=\"btn-search\">Search</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SectionSearch\r\n","import moment from 'moment';\r\n\r\nfunction SectionWeather({ weatherInfo }) {\r\n    const iconUrl = `https://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@4x.png`\r\n\r\n    const { temp, feels_like, pressure, humidity} = weatherInfo.main\r\n\r\n    function tempFromKelvinToCelcius(temp) {\r\n        return (temp - 273.15).toFixed(1)\r\n    }\r\n\r\n    return (\r\n        <section className=\"section-weather\">\r\n            <div className=\"container\">\r\n                <div className=\"weather-card\">\r\n                    <header>\r\n                        <h1>Current Weather</h1>\r\n                        <p>{moment().format('hh:mm a, MMMM DD')}</p>\r\n                    </header>\r\n                    <div className=\"city-container\">\r\n                        <div>\r\n                            <h1 className=\"city-name\">{weatherInfo.name}</h1>\r\n                            <p className=\"description\">{weatherInfo.weather[0].description}</p>\r\n                        </div>\r\n                        <img className=\"weather-img\" src={iconUrl} alt=\"icon-weather\" />\r\n                    </div>\r\n                    <div className=\"weather-details-container\">\r\n                        <h1>{tempFromKelvinToCelcius(temp)} &deg;C</h1>\r\n                        <table className=\"table-details\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Feels Like</td>\r\n                                    <td className=\"row-value\">\r\n                                        {tempFromKelvinToCelcius(feels_like)} &deg;C\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Wind</td>\r\n                                    <td className=\"row-value\">{weatherInfo.wind.speed} m/s</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Humidity</td>\r\n                                    <td className=\"row-value\">{humidity}%</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Precip</td>\r\n                                    <td className=\"row-value\">16</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Pressure</td>\r\n                                    <td className=\"row-value\">{pressure} hPa</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SectionWeather\r\n","import axios from 'axios';\nimport _ from 'lodash';\nimport { useState, useEffect } from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Loader from './components/Loader';\nimport Message from './components/Message';\nimport SectionNews from './components/SectionNews';\nimport SectionSearch from './components/SectionSearch';\nimport SectionWeather from './components/SectionWeather';\n\nfunction App() {\n\n  const [weatherInfo, setWeatherInfo] = useState({})\n  const [searchQuery, setSearchQuery] = useState('Lucknow')\n  const [newsSearchQuery, setNewsSearchQuery] = useState('Lucknow')\n\n  const [showMessage, setShowMessage] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        q: searchQuery,\n        appid: process.env.REACT_APP_WEATHER_API_KEY\n      }\n    }).then(res => {\n      setNewsSearchQuery(searchQuery)\n      setWeatherInfo(res.data)\n      setLoading(false)\n    }).catch(err => {\n      setLoading(false)\n      if(typeof err.response !== 'undefined' && err.response.status === 404) { showErrorMessage() }\n    })\n  }, [searchQuery])\n\n  function showErrorMessage() {\n    setShowMessage(true)\n\n    setTimeout(() => {\n      setShowMessage(false)\n    }, 2000)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"hero\">\n        <Header />\n        <SectionSearch submitQuery={(text) => setSearchQuery(text)} />\n      </div>\n      {loading ? (\n        <Loader />\n      ) : (\n        !_.isEmpty(weatherInfo) && (\n          <>\n            <SectionWeather weatherInfo={weatherInfo} />\n            <SectionNews searchLocation={newsSearchQuery}/>\n          </>\n        )\n      )}\n      <Message showMessage={showMessage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}